apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate-cam05
  labels:
    app.kubernetes.io/name: frigate-cam05
spec:
  replicas: 1
  revisionHistoryLimit: 0 
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate-cam05
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frigate-cam05
    spec:
      securityContext:
        fsGroup: 1000
      nodeName: k8s05
      containers:
      - name: frigate-cam05
        image: ghcr.io/blakeblackshear/frigate:0.14.1
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        volumeMounts:
        - name: frigate-cam05-configdir
          mountPath: /config
        - name: frigate-cam05-configmap
          mountPath: /config/config.yml
          subPath: config.yml
        - mountPath: /media/frigate
          name: frigate-data
        - mountPath: /dev/shm
          name: dshm
        env:
        - name: TZ
          value: "America/Chicago"
        livenessProbe:
          httpGet:
            path: /api
            port: 5000
          initialDelaySeconds: 300
          periodSeconds: 10
      priorityClassName: high-priority
      restartPolicy: Always
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: dshm
      - name: frigate-cam05-configmap
        configMap:
          name: frigate-cam05-config
      - name: frigate-cam05-configdir
        persistentVolumeClaim:
          claimName: frigate-cam05-pvc
      - name: frigate-data
        nfs:
          path: /mnt/hdd/nvr/cam05
          server: 10.1.60.6

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go2rtc-cam05
  labels:
    app.kubernetes.io/name: go2rtc-cam05
spec:
  replicas: 1
  revisionHistoryLimit: 0 
  selector:
    matchLabels:
      app.kubernetes.io/name: go2rtc-cam05
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go2rtc-cam05
    spec:
      nodeName: k8s05
      hostNetwork: true
      containers:
      - name: go2rtc-cam05
        image: docker.io/alexxit/go2rtc:1.9.8
        volumeMounts:
        - name: go2rtc-cam05-configmap
          mountPath: /config/go2rtc.yaml
          subPath: go2rtc.yaml
        env:
        - name: TZ
          value: "America/Chicago"
        - name: CAMERA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: frigate-secrets
              key: CAMERA_PASSWORD
      priorityClassName: high-priority
      restartPolicy: Always
      volumes:
      - name: go2rtc-cam05-configmap
        configMap:
          name: go2rtc-cam05-config
